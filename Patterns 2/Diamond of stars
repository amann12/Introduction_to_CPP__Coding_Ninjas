Diamond of stars

Print the following pattern for the given number of rows.
Note: N is always odd.


Pattern for N = 5



The dots represent spaces.



Input format :
N (Total no. of rows and can only be odd)
Output format :
Pattern in N lines
Constraints :
1 <= N <= 49
Sample Input 1:
5
Sample Output 1:
  *
 ***
*****
 ***
  *
Sample Input 2:
3
Sample Output 2:
  *
 ***
  *
  
  
  ////////////////////////Solution//////////////////////////////
  
  #include<iostream>
using namespace std;


int main() {
   /* int  i,j,k,s,n;
   cin>>n;
   s = (n+1)/2;
     cout<<"\n";
  	for  (i = 1; i <= s; i++)
    {
      for  (j = 1; j<= s-i; j++)
         cout<<" ";
        for  (k = 1; k <= 2 * i - 1; k++)
         cout<<"*";
      cout<<"\n";
   }
    */ //Read input as specified in the question.
    // Print output as specified in the question.
     
    
 int n;
    cin>>n;
    int n1=(n+1)/2; // n=7 ==> 4
    int n2=(n/2); // n=7 ==> 3
    
    int i=1;
    while(i<=n1){
        int space=1;
        while(space<=n1-i){
            cout<<" ";
            space++;
        }
        int j=1;
        while(j<=(2*i-1)){
            cout<<"*";
            j++;
        }
        cout<<endl;
        i++;
    }
    int j = n2;
    while(j>=1){
       int space=1;
        while(space<=n2-j+1){
            cout<<" ";
            space++;
        } 
         int k=1;
        while(k<=(2*j-1)){
            cout<<"*";
            k++;
        }
        cout<<endl;
        j--;
        
    }
}
